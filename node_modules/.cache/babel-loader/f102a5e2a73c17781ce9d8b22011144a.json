{"ast":null,"code":"var _jsxFileName = \"/var/www/html/to-do-list/src/Components/ListCards.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport NoDataFound from './TabNoDataFound';\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: \"100%\",\n    marginBottom: \"10px\"\n  }\n});\nexport default function ImgMediaCard(props) {\n  const classes = useStyles();\n  const tabType = props.tabType;\n  const todoSearchFor = props.state.todoSearchFor; //Get records count of clicked tab data\n\n  var count = props.state.allTodoData.filter(obj => obj.todoType === tabType).length;\n\n  if (props.state.allTodoData.length > 0 && tabType == 'all' || count > 0) {\n    const count = props.count;\n    console.log(props);\n    return (//Looping through all data\n      props.state.allTodoData.map((item, index) => {\n        'akshay' == 'akshay' && React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          key: index.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: classes.card,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(CardActionArea, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(CardContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"h2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, item.txtWhatToDo, \"  \", item.txtWhenDiffFormat), React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"p\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, item.txtWhereToDo))), React.createElement(CardActions, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"small\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"Share\"), React.createElement(Button, {\n          size: \"small\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Learn More\"))));\n      })\n    );\n  }\n\n  return React.createElement(NoDataFound, {\n    tabType: tabType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/var/www/html/to-do-list/src/Components/ListCards.js"],"names":["React","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","Grid","EventNoteIcon","NoDataFound","useStyles","card","maxWidth","marginBottom","ImgMediaCard","props","classes","tabType","todoSearchFor","state","count","allTodoData","filter","obj","todoType","length","console","log","map","item","index","toString","txtWhatToDo","txtWhenDiffFormat","txtWhereToDo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AAIA,MAAMC,SAAS,GAAGX,UAAU,CAAC;AACzBY,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE,MADR;AAEFC,IAAAA,YAAY,EAAE;AAFZ;AADmB,CAAD,CAA5B;AAOA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAExC,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AAFwC,QAGhCO,OAHgC,GAGpBF,KAHoB,CAGhCE,OAHgC;AAAA,QAIhCC,aAJgC,GAIdH,KAAK,CAACI,KAJQ,CAIhCD,aAJgC,EAMxC;;AACA,MAAIE,KAAK,GAAGL,KAAK,CAACI,KAAN,CAAYE,WAAZ,CAAwBC,MAAxB,CAAgCC,GAAD,IAASA,GAAG,CAACC,QAAJ,KAAiBP,OAAzD,EAAkEQ,MAA9E;;AAGA,MAAKV,KAAK,CAACI,KAAN,CAAYE,WAAZ,CAAwBI,MAAxB,GAAiC,CAAjC,IAAsCR,OAAO,IAAI,KAAlD,IACIG,KAAK,GAAG,CADhB,EACoB;AAAA,UAERA,KAFQ,GAEEL,KAFF,CAERK,KAFQ;AAGhBM,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AAEA,WACI;AACAA,MAAAA,KAAK,CAACI,KAAN,CAAYE,WAAZ,CAAwBO,GAAxB,CAA4B,CAACC,IAAD,EAAOC,KAAP,KAExB;AACG,oBAAY,QAAZ,IAEH,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,EAAvB;AAA2B,UAAA,GAAG,EAAEA,KAAK,CAACC,QAAN,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,SAAS,EAAEf,OAAO,CAACL,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAQI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,OAAO,EAAC,IAAjC;AAAsC,UAAA,SAAS,EAAC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKkB,IAAI,CAACG,WADV,QACyBH,IAAI,CAACI,iBAD9B,CADJ,EAKI,oBAAC,UAAD;AAAY,UAAA,OAAO,EAAC,OAApB;AAA4B,UAAA,KAAK,EAAC,eAAlC;AAAkD,UAAA,SAAS,EAAC,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKJ,IAAI,CAACK,YADV,CALJ,CARJ,CAFJ,EAoBI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,OAAb;AAAqB,UAAA,KAAK,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAII,oBAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,OAAb;AAAqB,UAAA,KAAK,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,CApBJ,CADJ,CAFG;AAiCF,OApCL;AAFJ;AAyCH;;AACD,SAAO,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAIjB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport NoDataFound from './TabNoDataFound';\n\n\n\nconst useStyles = makeStyles({\n    card: {\n        maxWidth: \"100%\",\n        marginBottom: \"10px\"\n    }\n});\n\nexport default function ImgMediaCard(props) {\n\n    const classes = useStyles();\n    const { tabType } = props;\n    const { todoSearchFor } = props.state;\n\n    //Get records count of clicked tab data\n    var count = props.state.allTodoData.filter((obj) => obj.todoType === tabType).length;\n\n\n    if ((props.state.allTodoData.length > 0 && tabType == 'all')\n        || (count > 0)) {\n\n        const { count } = props;\n        console.log(props);\n\n        return (\n            //Looping through all data\n            props.state.allTodoData.map((item, index) =>\n\n                { \n                   'akshay' == 'akshay' \n                    &&\n                <Grid item xs={12} md={12} key={index.toString()}>\n                    <Card className={classes.card}>\n\n                        <CardActionArea>\n                            {/*<CardMedia\n                                            component=\"img\"\n                                            alt=\"Contemplative Reptile\"\n                                            height=\"140\"\n                                            image=\"/images/contemplative-reptile.jpg\"\n                                            title=\"Contemplative Reptile\"\n                             /> */ }\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                    {item.txtWhatToDo}  {item.txtWhenDiffFormat}\n\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                    {item.txtWhereToDo}\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                        <CardActions>\n                            <Button size=\"small\" color=\"primary\">\n                                Share\n                        </Button>\n                            <Button size=\"small\" color=\"primary\">\n                                Learn More\n                        </Button>\n                        </CardActions>\n                    </Card>\n                </Grid>\n                }\n           )\n        );\n    }\n    return <NoDataFound tabType = {tabType}/>;\n}\n"]},"metadata":{},"sourceType":"module"}