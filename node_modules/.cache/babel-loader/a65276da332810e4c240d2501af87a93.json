{"ast":null,"code":"var _jsxFileName = \"/var/www/html/to-do-list/src/Components/ListCards.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckIcon from '@material-ui/icons/Check';\nimport NoDataFound from './TabNoDataFound';\nimport { IconButton } from '@material-ui/core';\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: \"100%\",\n    marginBottom: \"10px\"\n  }\n});\nexport default function ImgMediaCard(props) {\n  const classes = useStyles();\n  const tabType = props.tabType;\n  const todoSearchFor = props.state.todoSearchFor;\n\n  function changeTodoToDone() {}\n\n  function handleChange(counterId) {\n    alert(\"dsf\");\n    const other = props.state.allTodoData.filter(obj => obj.counterId != counterId);\n    console.log(other); //setState({ ...props.state, allTodoData: other });\n  } //Get records count of clicked tab data\n\n\n  var tabTypeBasedCount = props.state.allTodoData.filter(obj => obj.todoType === tabType).length;\n\n  if (props.state.allTodoData.length > 0 && tabType == 'all' || tabTypeBasedCount > 0) {\n    const count = props.count;\n    console.log(props);\n    return (//Looping through all data\n      props.state.allTodoData.map((item, index) => React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        key: index.toString(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(CardActionArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, item.txtWhatToDo, \"  \", item.txtWhenDiffFormat), React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, item.txtWhereToDo))), React.createElement(CardActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        size: \"small\",\n        onClick: changeTodoToDone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(CheckIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(IconButton, {\n        size: \"small\",\n        onClick: e => props.handler(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(DeleteIcon, {\n        title: \"Delete Todo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }))))))\n    );\n  }\n\n  return React.createElement(NoDataFound, {\n    tabType: tabType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/var/www/html/to-do-list/src/Components/ListCards.js"],"names":["React","useState","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","Grid","EventNoteIcon","DeleteIcon","CheckIcon","NoDataFound","IconButton","useStyles","card","maxWidth","marginBottom","ImgMediaCard","props","classes","tabType","todoSearchFor","state","changeTodoToDone","handleChange","counterId","alert","other","allTodoData","filter","obj","console","log","tabTypeBasedCount","todoType","length","count","map","item","index","toString","txtWhatToDo","txtWhenDiffFormat","txtWhereToDo","e","handler"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckIcon from '@material-ui/icons/Check';\nimport NoDataFound from './TabNoDataFound';\nimport { IconButton } from '@material-ui/core';\n\n\n\n\nconst useStyles = makeStyles({\n    card: {\n        maxWidth: \"100%\",\n        marginBottom: \"10px\"\n    }\n});\n\n\n\nexport default function ImgMediaCard(props) {\n\n    const classes = useStyles();\n    const { tabType } = props;\n    const { todoSearchFor } = props.state;\n\n   \n   \n    function changeTodoToDone() {\n\n        \n    }\n    \n    function handleChange(counterId) {\n        \n        alert(\"dsf\");\n        const other = props.state.allTodoData.filter((obj) => obj.counterId != counterId);\n\n       console.log(other);\n\n       //setState({ ...props.state, allTodoData: other });\n    }\n\n    //Get records count of clicked tab data\n    var tabTypeBasedCount = props.state.allTodoData.filter((obj) => obj.todoType === tabType).length;\n    if ((props.state.allTodoData.length > 0 && tabType == 'all')\n        || (tabTypeBasedCount > 0)) {\n\n        const { count } = props;\n        console.log(props);\n\n        return (\n            //Looping through all data\n            props.state.allTodoData.map((item, index) =>\n\n                <Grid item xs={12} md={12} key={index.toString()}>\n                    <Card className={classes.card}>\n\n                        <CardActionArea>\n                            {/*<CardMedia\n                                            component=\"img\"\n                                            alt=\"Contemplative Reptile\"\n                                            height=\"140\"\n                                            image=\"/images/contemplative-reptile.jpg\"\n                                            title=\"Contemplative Reptile\"\n                             /> */ }\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                    {item.txtWhatToDo}  {item.txtWhenDiffFormat}\n\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                    {item.txtWhereToDo}\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                        <CardActions>\n                            <IconButton size=\"small\"\n                                onClick={changeTodoToDone}>\n                                <CheckIcon />\n                            </IconButton>\n                            <IconButton size=\"small\"\n                                onClick={(e)=> props.handler(e)}\n                            >\n                                <DeleteIcon title=\"Delete Todo\"\n                                />\n                            </IconButton>\n                        </CardActions>\n                    </Card>\n                </Grid>\n\n            )\n        );\n    }\n    return <NoDataFound tabType={tabType} />;\n}\n"]},"metadata":{},"sourceType":"module"}