{"ast":null,"code":"import _slicedToArray from \"/var/www/html/new_react_nikita/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/var/www/html/new_react_nikita/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/var/www/html/new_react_nikita/src/Components/Tab.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport ImgMediaCard from './Delete ';\n\nfunction TabPanel(props) {\n  const children = props.children,\n        value = props.value,\n        index = props.index,\n        other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return React.createElement(Typography, Object.assign({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), value === index && React.createElement(Box, {\n    p: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, children));\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root_left_side: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    height: '452px'\n  }\n}));\nexport default function SimpleTabs(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        value = _React$useState2[0],\n        setValue = _React$useState2[1];\n\n  const state = props.state;\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return React.createElement(Scrollbars, {\n    style: {\n      height: \"310px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      maxHeight: \"200px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(TabPanel, {\n    value: value,\n    index: 0,\n    className: classes.tabsPanel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(ImgMediaCard, {\n    state: props.state,\n    tabType: 'all',\n    handler: props.handler,\n    handleRemoval: props.handleRemoval,\n    handleChangeStatus: props.handleChangeStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/var/www/html/new_react_nikita/src/Components/Tab.js"],"names":["React","PropTypes","makeStyles","AppBar","Tabs","Tab","Typography","Box","ImgMediaCard","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","useStyles","theme","root_left_side","flexGrow","backgroundColor","palette","background","paper","height","SimpleTabs","classes","useState","setValue","state","handleChange","event","newValue","maxHeight","tabsPanel","handler","handleRemoval","handleChangeStatus"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport ImgMediaCard from './Delete ';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root_left_side: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        height: '452px',\n    },\n\n}));\n\nexport default function SimpleTabs(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n    const state = props.state;\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n\n        <Scrollbars style={{ height: \"310px\" }}>\n            <div style={{ maxHeight: \"200px\" }}>\n                <TabPanel value={value} index={0} className={classes.tabsPanel}>\n                    <ImgMediaCard state={props.state} tabType={'all'} handler={props.handler} handleRemoval={props.handleRemoval} handleChangeStatus={props.handleChangeStatus} />\n                </TabPanel>\n            </div>\n        </Scrollbars>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}