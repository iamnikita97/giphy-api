{"ast":null,"code":"var _jsxFileName = \"/var/www/html/to-do-list/src/Components/ListCards.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckIcon from '@material-ui/icons/Check';\nimport NoDataFound from './TabNoDataFound';\nimport { IconButton } from '@material-ui/core';\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: \"100%\",\n    marginBottom: \"10px\"\n  }\n});\n\nfunction changeTodoToDone() {\n  alert(\"dsf\");\n}\n\nexport default function ImgMediaCard(props) {\n  const classes = useStyles();\n  const tabType = props.tabType;\n  const todoSearchFor = props.state.todoSearchFor; //Get records count of clicked tab data\n\n  var tabTypeBasedCount = props.state.allTodoData.filter(obj => obj.todoType === tabType).length;\n  var tabTypeBasedCount = props.state.allTodoData.filter(obj => obj.todoType === tabType).length;\n\n  if (props.state.allTodoData.length > 0 && tabType == 'all' || tabTypeBasedCount > 0) {\n    const count = props.count;\n    console.log(props);\n    return (//Looping through all data\n      props.state.allTodoData.map((item, index) => React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        key: index.toString(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(CardActionArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, item.txtWhatToDo, \"  \", item.txtWhenDiffFormat), React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, item.txtWhereToDo))), React.createElement(CardActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        size: \"xs\",\n        obj: item,\n        onClick: changeTodoToDone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(CheckIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(IconButton, {\n        size: \"xs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(DeleteIcon, {\n        title: \"Delete Todo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }))))))\n    );\n  }\n\n  return React.createElement(NoDataFound, {\n    tabType: tabType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/var/www/html/to-do-list/src/Components/ListCards.js"],"names":["React","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","Grid","EventNoteIcon","DeleteIcon","CheckIcon","NoDataFound","IconButton","useStyles","card","maxWidth","marginBottom","changeTodoToDone","alert","ImgMediaCard","props","classes","tabType","todoSearchFor","state","tabTypeBasedCount","allTodoData","filter","obj","todoType","length","count","console","log","map","item","index","toString","txtWhatToDo","txtWhenDiffFormat","txtWhereToDo"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckIcon from '@material-ui/icons/Check';\nimport NoDataFound from './TabNoDataFound';\nimport { IconButton } from '@material-ui/core';\n\n\n\n\nconst useStyles = makeStyles({\n    card: {\n        maxWidth: \"100%\",\n        marginBottom: \"10px\"\n    }\n});\n\nfunction changeTodoToDone() {\n\n    alert(\"dsf\");\n}\n\nexport default function ImgMediaCard(props) {\n\n    const classes = useStyles();\n    const { tabType } = props;\n    const { todoSearchFor } = props.state;\n\n    //Get records count of clicked tab data\n    var tabTypeBasedCount = props.state.allTodoData.filter((obj) => obj.todoType === tabType).length;\n    var tabTypeBasedCount = props.state.allTodoData.filter((obj) => obj.todoType === tabType).length;\n\n    if ((props.state.allTodoData.length > 0 && tabType == 'all')\n        || (tabTypeBasedCount > 0)) {\n\n        const { count } = props;\n        console.log(props);\n\n        return (\n            //Looping through all data\n            props.state.allTodoData.map((item, index) =>\n\n                <Grid item xs={12} md={12} key={index.toString()}>\n                    <Card className={classes.card}>\n\n                        <CardActionArea>\n                            {/*<CardMedia\n                                            component=\"img\"\n                                            alt=\"Contemplative Reptile\"\n                                            height=\"140\"\n                                            image=\"/images/contemplative-reptile.jpg\"\n                                            title=\"Contemplative Reptile\"\n                             /> */ }\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                    {item.txtWhatToDo}  {item.txtWhenDiffFormat}\n\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                    {item.txtWhereToDo}\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                        <CardActions>\n                            {/* <Button size=\"small\" color=\"primary\">\n                                Share\n                        </Button> */}\n                        <IconButton size=\"xs\" \n                        obj = {item}\n                        onClick = {changeTodoToDone}\n                        >\n                                <CheckIcon />\n                        </IconButton>\n                        <IconButton size=\"xs\">\n                                <DeleteIcon title=\"Delete Todo\"/>\n                        </IconButton>\n                        </CardActions>\n                    </Card>\n                </Grid>\n               \n           )\n        );\n    }\n    return <NoDataFound tabType = {tabType}/>;\n}\n"]},"metadata":{},"sourceType":"module"}