{"ast":null,"code":"import _objectSpread from \"/var/www/html/to-do-list/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/var/www/html/to-do-list/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/html/to-do-list/src/Components/SignInSide.js\";\nimport React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport DateAndTimePickers from './DateTimeInput';\nimport DateFnsUtils from '@date-io/date-fns';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport moment from 'moment';\nimport { DateTimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport SimpleTabs from './Tabs';\nconst useStyles = makeStyles(theme => ({\n  todo_time_comp_con: {\n    // height: '480px',\n    maxWidth: '800px',\n    position: 'relative',\n    //margin: '0 auto',\n    top: '61px !important',\n    margin: '0px 0px 0px 16px'\n  },\n  root: {\n    // height: '480px',\n    maxWidth: '800px',\n    position: 'relative',\n    margin: '60px auto 0 auto',\n    border: '1px solid blue',\n    boxShadow: '5px 10px #888888'\n  },\n  containerFirstChild: {\n    border: '1px solid blue'\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor: theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center'\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nexport default function SignInSide() {\n  const classes = useStyles(); //const [txtWhen, setTxtWhenDateChange] = useState(null);\n  //const txtWhen = null;\n\n  const _useState = useState({\n    txtWhereToDo: '',\n    txtWhatToDo: '',\n    drpdTodoType: '',\n    txtWhen: null,\n    allTodoData: [],\n    counterId: 0,\n    todoSearchFor: 'today'\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const handleDateChange = date => {\n    var dateTime = moment(date).format(\"DD-MM-YYYY hh:mm a\"); //dd/MM/yyyy hh:mm a\n\n    setState(_objectSpread({}, state, {\n      txtWhen: date,\n      txtWhenDiffFormat: dateTime\n    }));\n    console.log(state);\n  };\n\n  function handleRemoval(id) {\n    alert(\"sai\");\n  }\n\n  function handleChange(event) {\n    console.log(event);\n    setState(_objectSpread({}, state, {\n      [event.target.id]: event.target.value\n    }));\n    console.log(state);\n  }\n\n  function addTodoData(event) {\n    event.preventDefault();\n    let counter = state.counterId + 1;\n    setState(state => _objectSpread({}, state, {\n      counterId: counter,\n      allTodoData: [...state.allTodoData, {\n        counterId: counter,\n        txtWhereToDo: state.txtWhereToDo,\n        txtWhatToDo: state.txtWhatToDo,\n        drpdTodoType: state.drpdTodoType,\n        txtWhen: state.txtWhen,\n        txtWhenDiffFormat: state.txtWhenDiffFormat,\n        isActive: true,\n        todoType: 'active',\n        todoStatus: ''\n      }]\n    }));\n    console.log(state);\n    console.log(moment());\n  }\n\n  return (//alignItems=\"center\"\n    React.createElement(React.Fragment, null, React.createElement(Grid, {\n      container: true,\n      component: \"main\",\n      className: classes.todo_time_comp_con,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Select, {\n      native: true,\n      id: \"todoSearchFor\",\n      name: \"todoSearchFor\",\n      onChange: handleChange,\n      value: state.todoSearchFor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"today\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Today\"), React.createElement(\"option\", {\n      value: \"upcoming\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Upcoming\"), React.createElement(\"option\", {\n      value: \"previous\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Previous\"))), React.createElement(Grid, {\n      container: true,\n      component: \"main\",\n      className: classes.root,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      xs: false,\n      sm: 12,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      xs: false,\n      sm: 4,\n      md: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(SimpleTabs, {\n      state: state,\n      handler: setState,\n      handleRemoval: handleRemoval,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      md: 5,\n      component: Paper,\n      elevation: 6,\n      square: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      className: classes.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(EventNoteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"To Do\"), React.createElement(\"form\", {\n      className: classes.form,\n      onSubmit: addTodoData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      required: true,\n      className: classes.formControl,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"drpdTodoType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Type\"), React.createElement(Select, {\n      native: true,\n      id: \"drpdTodoType\",\n      name: \"drpdTodoType\",\n      onChange: handleChange,\n      value: state.drpdTodoType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"family\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Family\"), React.createElement(\"option\", {\n      value: \"business\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Business\"), React.createElement(\"option\", {\n      value: \"personal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Personal\"), React.createElement(\"option\", {\n      value: \"work\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Work\"))), React.createElement(TextField, {\n      id: \"txtWhatToDo\",\n      name: \"txtWhatToDo\",\n      label: \"What i have to do?\",\n      fullWidth: true,\n      onChange: handleChange,\n      value: state.txtWhatToDo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"txtWhereToDo\",\n      name: \"txtWhereToDo\",\n      label: \"Where?\",\n      fullWidth: true,\n      onChange: handleChange,\n      value: state.txtWhereToDo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(DateTimePicker, {\n      disablePast: true,\n      label: \"When?\",\n      clearable: true,\n      fullWidth: true,\n      name: \"txtWhen\",\n      id: \"txtWhen\",\n      value: state.txtWhen,\n      onChange: handleDateChange,\n      format: \"dd-MM-yyyy hh:mm a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Add Task\")))))))\n  );\n}","map":{"version":3,"sources":["/var/www/html/to-do-list/src/Components/SignInSide.js"],"names":["React","useState","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Paper","Box","Grid","EventNoteIcon","Typography","makeStyles","Select","InputLabel","FormControl","FormHelperText","DateAndTimePickers","DateFnsUtils","MenuItem","moment","DateTimePicker","MuiPickersUtilsProvider","SimpleTabs","useStyles","theme","todo_time_comp_con","maxWidth","position","top","margin","root","border","boxShadow","containerFirstChild","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","SignInSide","classes","txtWhereToDo","txtWhatToDo","drpdTodoType","txtWhen","allTodoData","counterId","todoSearchFor","state","setState","handleDateChange","date","dateTime","format","txtWhenDiffFormat","console","log","handleRemoval","id","alert","handleChange","event","target","value","addTodoData","preventDefault","counter","isActive","todoType","todoStatus","formControl"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport DateAndTimePickers from './DateTimeInput';\nimport DateFnsUtils from '@date-io/date-fns';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport moment from 'moment';\nimport {\n  DateTimePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\n\nimport SimpleTabs from './Tabs';\n\n\nconst useStyles = makeStyles(theme => ({\n  todo_time_comp_con: {\n    // height: '480px',\n    maxWidth: '800px',\n    position: 'relative',\n    //margin: '0 auto',\n    top: '61px !important',\n    margin: '0px 0px 0px 16px'\n  },\n  root: {\n    // height: '480px',\n    maxWidth: '800px',\n    position: 'relative',\n    margin: '60px auto 0 auto',\n    border: '1px solid blue',\n\n    boxShadow: '5px 10px #888888'\n  },\n  containerFirstChild: {\n    border: '1px solid blue',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignInSide() {\n  const classes = useStyles();\n  //const [txtWhen, setTxtWhenDateChange] = useState(null);\n  //const txtWhen = null;\n\n  const [state, setState] = useState({\n    txtWhereToDo: '',\n    txtWhatToDo: '',\n    drpdTodoType: '',\n    txtWhen: null,\n    allTodoData: [],\n    counterId: 0,\n    todoSearchFor : 'today'\n  })\n  const handleDateChange = date => {\n\n    var dateTime = moment(date).format(\"DD-MM-YYYY hh:mm a\");\n    //dd/MM/yyyy hh:mm a\n    setState({ ...state, \n      txtWhen: date, \n      txtWhenDiffFormat: dateTime\n    });\n    console.log(state);\n  };\n\n  function handleRemoval(id) {\n    alert(\"sai\");\n  }\n\n  function handleChange(event) {\n    console.log(event);\n    \n    setState({ ...state, [event.target.id]: event.target.value });\n\n    console.log(state);\n  }\n\n  function addTodoData(event) {\n    event.preventDefault();\n\n    let counter = state.counterId + 1;\n    setState((state) => ({\n      ...state,\n      counterId: counter,\n      allTodoData: [...state.allTodoData,\n      { \n        counterId : counter,\n        txtWhereToDo: state.txtWhereToDo,\n        txtWhatToDo: state.txtWhatToDo,\n        drpdTodoType: state.drpdTodoType,\n        txtWhen : state.txtWhen,\n        txtWhenDiffFormat : state.txtWhenDiffFormat,\n        isActive : true,\n        todoType : 'active',\n        todoStatus : ''}]\n    }));\n\n    console.log(state);\n    console.log(moment());\n  }\n  return (\n\n    //alignItems=\"center\"\n    <>\n      <Grid container component=\"main\" className={classes.todo_time_comp_con}\n        justify=\"center\">\n        <Select\n                    native\n                    id=\"todoSearchFor\"\n                    name=\"todoSearchFor\"\n                    onChange={handleChange}\n                    value={state.todoSearchFor}\n                  >\n                    <option value='today'>Today</option>\n          <option value='upcoming'>Upcoming</option>\n          <option value='previous'>Previous</option>\n          </Select>\n      </Grid>\n\n      <Grid container component=\"main\" className={classes.root}\n        justify=\"center\">\n        <CssBaseline />\n        {/* className={classes.image} */}\n        <Grid item xs={false} sm={12} md={12}></Grid>\n        <Grid item xs={false} sm={4} md={7}>\n          <SimpleTabs state = {state} handler = {setState} handleRemoval = {handleRemoval}/>\n        </Grid>\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <EventNoteIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              To Do\n            </Typography>\n            <form className={classes.form} onSubmit={addTodoData}>\n              <Grid container spacing={5}>\n\n                <FormControl required className={classes.formControl} fullWidth>\n                  <InputLabel htmlFor=\"drpdTodoType\">Type</InputLabel>\n                  <Select\n                    native\n                    id=\"drpdTodoType\"\n                    name=\"drpdTodoType\"\n                    onChange={handleChange}\n                    value={state.drpdTodoType}\n                  >\n                    <option value=\"\" />\n                    <option value='family'>Family</option>\n                    <option value='business'>Business</option>\n                    <option value='personal'>Personal</option>\n                    <option value='work'>Work</option>\n                  </Select>\n                </FormControl>\n\n                <TextField\n                  id=\"txtWhatToDo\"\n                  name=\"txtWhatToDo\"\n                  label=\"What i have to do?\"\n                  fullWidth\n                  onChange={handleChange}\n                  value={state.txtWhatToDo}\n                />\n                <TextField\n                  id=\"txtWhereToDo\"\n                  name=\"txtWhereToDo\"\n                  label=\"Where?\"\n                  fullWidth\n                  onChange={handleChange}\n                  value={state.txtWhereToDo}\n                />\n                <MuiPickersUtilsProvider utils={DateFnsUtils} >\n                  <DateTimePicker\n                  disablePast\n                    label=\"When?\"\n                    clearable\n                    fullWidth\n                    name='txtWhen'\n                    id='txtWhen'\n                    value={state.txtWhen}\n                    onChange={handleDateChange}\n                    format=\"dd-MM-yyyy hh:mm a\"\n                  />\n                </MuiPickersUtilsProvider>\n\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                >\n                  Add Task\n                  </Button>\n              </Grid>\n            </form>\n          </div>\n        </Grid>\n      </Grid>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}